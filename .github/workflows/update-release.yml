name: Update Release

on:
  workflow_call:
    inputs: 
      image-name:
        required: false
        type: string
      release-tag:
        required: false
        type: string

jobs:
  update-release-with-new-artifacts:
    name: Update ${{ inputs.release-tag }} release with new artifacts
    runs-on: ubuntu-latest
    env:
      FILES_NAME_PATTERN: >-
            ${{ inputs.image-name || 
              vars.BRANCHES_CONFIGURATION
              && fromJSON(vars.BRANCHES_CONFIGURATION)[github.event.release.target_commitish]
              && fromJSON(vars.BRANCHES_CONFIGURATION)[github.event.release.target_commitish].moose-version
              || fromJSON(vars.BRANCHES_CONFIGURATION)[github.ref_name] 
              && fromJSON(vars.BRANCHES_CONFIGURATION)[github.ref_name].image-name 
              || format('{0}-{1}', github.event.repository.name, github.ref_name) }}*
  
    steps:

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ env.FILE_NAMES_PATTERN }}
      
      - name: Zip files
        # Zip the downloaded files.
        # Store a string variable: the zip files names separated by semicolons.
        id: zip-files
        run: |
          for i in $FILES_NAME_PATTERN; do zip -r "${i%/}.zip" "$i"; done
          echo files-names=$(ls -m $FILES_NAME_PATTERN.zip) | sed -e 's/, /;/g' >> $GITHUB_OUTPUT
      
      - name: Update release
        uses: Xotl/cool-github-releases@v1 # See https://github.com/actions-marketplace-validations/Xotl_cool-github-releases
        with:
          mode: update
          replace_assets: true
          tag_name:  >-
            ${{ inputs.release-tag || 
              vars.BRANCHES_CONFIGURATION
              && fromJSON(vars.BRANCHES_CONFIGURATION)[github.event.release.target_commitish]
              && fromJSON(vars.BRANCHES_CONFIGURATION)[github.event.release.target_commitish].release-tag
              || fromJSON(vars.BRANCHES_CONFIGURATION)[github.ref_name] 
              && fromJSON(vars.BRANCHES_CONFIGURATION)[github.ref_name].release-tag 
              || 'generated-assets' }}
          assets: ${{ steps.zip-files.outputs.files-names }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
